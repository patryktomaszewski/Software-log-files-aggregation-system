# Generated by Django 3.2.8 on 2021-11-08 22:47

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CpuData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_time', models.FloatField(verbose_name='User Time')),
                ('nice_time', models.FloatField(verbose_name='Nice Time')),
                ('system_time', models.FloatField(verbose_name='System Time')),
                ('idle_time', models.FloatField(verbose_name='Idle Time')),
                ('cpu_percent', models.FloatField(verbose_name='%CPU')),
                ('cpu_time_percent_user', models.FloatField(verbose_name='%CPU User Time')),
                ('cpu_time_percent_nice', models.FloatField(verbose_name='%CPU Nice Time')),
                ('cpu_time_percent_system', models.FloatField(verbose_name='%CPU System Time')),
                ('cpu_time_percent_idle', models.FloatField(verbose_name='%CPU Idle Time')),
                ('cpu_count_logical', models.IntegerField(null=True, verbose_name='CPU Count Logical')),
                ('cpu_count_physical', models.IntegerField(null=True, verbose_name='CPU Count Physical')),
                ('ctx_switches', models.IntegerField(verbose_name='Context Switches')),
                ('interrupts', models.IntegerField(verbose_name='Interrupts')),
                ('soft_interrupts', models.IntegerField(verbose_name='Soft Interrupts')),
                ('sys_calls', models.IntegerField(verbose_name='System Calls')),
                ('cpu_frequency_current', models.FloatField(blank=True, null=True, verbose_name='CPU Current Frequency')),
                ('cpu_frequency_min', models.FloatField(blank=True, null=True, verbose_name='CPU Min Frequency')),
                ('cpu_frequency_max', models.FloatField(blank=True, null=True, verbose_name='CPU Max Frequency')),
                ('load_avg_1_min', models.FloatField(verbose_name='Average System Load 1 Minute')),
                ('load_avg_5_min', models.FloatField(verbose_name='Average System Load 5 Minutes')),
                ('load_avg_15_min', models.FloatField(verbose_name='Average System Load 15 Minutes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('INFO', 'Information'), ('ERR', 'Error'), ('WRN', 'Warning')], default='INFO', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='DisksData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(max_length=255, verbose_name='Device')),
                ('total', models.BigIntegerField(verbose_name='Total disk size')),
                ('used', models.BigIntegerField(verbose_name='Used disk size')),
                ('free', models.BigIntegerField(verbose_name='Free disk size')),
                ('percent', models.FloatField(verbose_name='Percent of used disk')),
                ('type', models.CharField(max_length=255, verbose_name='Type of disk')),
                ('mountpoint', models.CharField(max_length=255, verbose_name='Mountpoint')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('INFO', 'Information'), ('ERR', 'Error'), ('WRN', 'Warning')], default='INFO', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='MemoryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_physical_memory', models.FloatField(verbose_name='Total Physical Memory')),
                ('available_physical_memory', models.FloatField(verbose_name='Available Physical Memory')),
                ('used_physical_memory', models.FloatField(verbose_name='Used Physical Memory')),
                ('use_percentage_physical_memory', models.FloatField(verbose_name='Use Percentage Physical Memory')),
                ('total_swap_memory', models.FloatField(verbose_name='Total Swap Memory')),
                ('free_swap_memory', models.FloatField(verbose_name='Free Swap Memory')),
                ('used_swap_memory', models.FloatField(verbose_name='Used Swap Memory')),
                ('use_percentage_swap_memory', models.FloatField(verbose_name='Use Percentage Swap Memory')),
                ('sin_swap_memory', models.FloatField(verbose_name='Number of Bytes The System Has Swapped In From Disk')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('INFO', 'Information'), ('ERR', 'Error'), ('WRN', 'Warning')], default='INFO', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='SensorsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_percent', models.IntegerField(verbose_name='Battery Percentage')),
                ('is_power_plugged', models.BooleanField(verbose_name='Is Power Plugged')),
                ('sec_left', models.IntegerField(verbose_name='Approximation of how many seconds are left before the battery runs out of power')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('INFO', 'Information'), ('ERR', 'Error'), ('WRN', 'Warning')], default='INFO', max_length=6)),
            ],
        ),
    ]
